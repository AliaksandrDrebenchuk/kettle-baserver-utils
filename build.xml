<project name="BA Server Utils" basedir="." default="jar" 
	     xmlns:ivy="antlib:org.apache.ivy.ant">

  <description>
    This build file is used to create the kettle plugin BA Server Utils.
  </description>

  <echo>project.revision = ${project.revision}</echo>

  <!-- import top level build properties -->
  <property file="build.properties" description="top level properties"/>

  <!-- import subfloor file which contains all the default tasks -->
  <import file="build-res/subfloor-pkg.xml" id="subfloor"/>
  
  <!-- build plugin properties -->
  <!-- <property name="plugin.name" value="${project.name}"/> -->
  <property name="plugin.artifact.id" value="${ivy.artifact.id}"/>
  <property name="plugin.jarfile" value="${plugin.artifact.id}-${project.revision}.jar"/>
  <property name="plugin.zipfile" value="${plugin.artifact.id}-${project.revision}.zip"/>
  <property name="stage.dir" value="${bin.dir}/stage" description="stage directory"/>
  <property name="samples.dir" value="${basedir}/samples" description="samples directory"/>

  <!--==========================================================================================
      target: dist
      creates a distribution of this project in a zip ready for marketplace (overrides subfloor dist)
  ===========================================================================================-->
  <target name="dist" depends="clean,resolve" description="creates a distribution">

    <!-- create dist folder -->
    <mkdir dir="${dist.dir}"/>

    <!-- create the stage folder tree -->
    <mkdir dir="${stage.dir}"/>
    <mkdir dir="${stage.dir}/${project.id}"/>

    <!-- jar things up, including properties files and icons, and copy to stage -->
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" includes="**/*.properties" />
    </copy>
    <jar jarfile="${stage.dir}/${project.id}/${plugin.jarfile}">
      <fileset dir="${classes.dir}" />
      <fileset dir="${res.dir}" includes="**/*.png" />
    </jar>

    <!-- copy samples to stage -->
    <copy todir="${stage.dir}/${project.id}/samples" overwrite="true">
      <fileset dir="${samples.dir}" />
    </copy>

    <!-- copy readme to stage -->
    <copy todir="${stage.dir}/${project.id}" overwrite="true">
      <fileset file="README.md" />
    </copy>

    <!-- create the version file -->
    <tstamp/>
    <property name="build.id" value="manual-${DSTAMP}"/>
    <echo file="${stage.dir}/${project.id}/version.xml"
          message="&lt;version branch='${project.stage}' buildId='${build.id}'>${project.version}&lt;/version>"/>

    <!-- create a zip file -->
    <zip zipfile="${dist.dir}/${plugin.zipfile}" basedir="${stage.dir}/${project.id}"
         includes="**/*"
         excludes="**/Thumbs.db  **/.DS_Store"/>

    <!-- create market_entry.xml file -->
    <copy file="${basedir}/market_entry.xml" tofile="${dist.dir}/market_entry.xml" overwrite="true">
      <filterset>
        <filter token="project.stage" value="${project.stage}"/>
        <filter token="project.version" value="${project.version}"/>
        <filter token="project.revision" value="${project.revision}"/>
        <filter token="project.package" value="${plugin.zipfile}"/>
      </filterset>
    </copy>

  </target>

</project>
